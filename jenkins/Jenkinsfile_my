pipeline {
    agent any
 
    parameters {
     string defaultValue: 'main', name: 'BRANCH', trim: true
}
    environment {
           BRANCH_NAME = "${BRANCH}"
          }

         stages{  
            stage('BUILD') {
                 steps{
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh '''
                      sleep 5
                       echo "This is a BUILD stage $BRANCH_NAME"
                         exit 1
                         '''
                }
            }
            }
               stage ('TEST') {
                  parallel {
                
                stage ('TEST ON LINUX MACHINE') {
                    steps{
                   sh '''
                   sleep 5
                   echo "This is a TEST on LINUX"
                   '''
                }
            }
             stage ('TEST ON WINDOWS MACHINE') {
                    steps{
                   sh '''
                   sleep 5
                   echo "This is a TEST on WINDOWS"
                   '''
                }
            } 

             stage ('TEST ON MAC MACHINE') {
                    steps{
                        catchError(buildResult: 'SUCECSS', stageResult: 'FAILURE') {
                   sh '''
                   sleep 5
                   echo "This is a TEST on MAC"
                   exit 1
                   '''
                }
            } 
             }

             stage ('TEST ON CHROME MACHINE') {
                    steps{
                   sh '''
                   sleep 5
                   echo "This is a TEST on CHROME"
                   '''
                }
            } 
        }
    }  
                     stage ('DEPLOY') {
                         steps{
                      sh '''
                   sleep 5
                   echo "This is a DEPLOY stage $BRANCH_NAME"
                  '''
               }
           }
       } 
}